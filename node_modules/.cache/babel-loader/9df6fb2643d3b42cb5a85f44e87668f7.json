{"ast":null,"code":"import _classCallCheck from \"/Users/rashi/Desktop/development-r/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rashi/Desktop/development-r/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rashi/Desktop/development-r/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rashi/Desktop/development-r/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rashi/Desktop/development-r/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rashi/Desktop/development-r/src/Cart.js\";\nimport React from \"react\";\n\nvar Cart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cart, _React$Component);\n\n  function Cart(props) {\n    var _this;\n\n    _classCallCheck(this, Cart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cart).call(this, props));\n    _this.state = {\n      contents: _this.props.cartContents\n    };\n    return _this;\n  }\n  /**\n   * This function ensures that the Cart's total is updated the instant an item is added to the Cart. In React, a component only updates when its state\n   * changes. You can pass data from parent to child through props but there is no rerender logic there. Since this.state.contents is the props of contents\n   * from Shop, we have to update this.state.contents within this class for it to rerender. The componentDidUpdate() API makes sure that calculating the total is\n   * the absolutely last thing to be executed.\n   *\n   * TODO: Checks that the prevProps or prevState doesn't equal to the current props and state, then calculate total. \n   */\n\n\n  _createClass(Cart, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {} //TODO: Write functions that updates the total when an item's quantity is increased/decreased in the cart!\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"My Cart\"));\n    }\n  }]);\n\n  return Cart;\n}(React.Component);\n\nexport default Cart;","map":{"version":3,"sources":["/Users/rashi/Desktop/development-r/src/Cart.js"],"names":["React","Cart","props","state","contents","cartContents","prevProps","prevState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWG;AADV,KAAb;AAFiB;AAKlB;AAED;;;;;;;;;;;;uCAQmBC,S,EAAWC,S,EAAW,CACxC,C,CAED;;;;6BAES;AACP,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF;AAMD;;;;EA5BgBP,KAAK,CAACQ,S;;AA+BzB,eAAeP,IAAf","sourcesContent":["import React from \"react\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contents: this.props.cartContents,\n    };\n  }\n\n  /**\n   * This function ensures that the Cart's total is updated the instant an item is added to the Cart. In React, a component only updates when its state\n   * changes. You can pass data from parent to child through props but there is no rerender logic there. Since this.state.contents is the props of contents\n   * from Shop, we have to update this.state.contents within this class for it to rerender. The componentDidUpdate() API makes sure that calculating the total is\n   * the absolutely last thing to be executed.\n   *\n   * TODO: Checks that the prevProps or prevState doesn't equal to the current props and state, then calculate total. \n   */\n  componentDidUpdate(prevProps, prevState) {\n  }\n\n  //TODO: Write functions that updates the total when an item's quantity is increased/decreased in the cart!\n\n  render() {\n    return (\n      <div className=\"cart\">\n        <h3>My Cart</h3>\n        {/*TODO: Create an instance of the ProductGrid Component that passes props from Shop to Product Grid.*/}\n      </div>\n    )\n  }\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}